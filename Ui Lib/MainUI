--[[ I GIVE ALL CREDITS UI LIBRARY TO ORION THIS IS NOT MINE AND I JUST MODIFIED IT
https://github.com/shlexware/Orion/blob/main/Documentation.md ]]

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local CanCantHUB = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(19, 7, 30),
            Second = Color3.fromRGB(19, 7, 30),
            Stroke = Color3.fromRGB(255, 255, 255),
            Divider = Color3.fromRGB(255, 255, 255),
            Text = Color3.fromRGB(255, 255, 255),
            TextDark = Color3.fromRGB(150, 150, 150)
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false
}

-- Feather Icons https://github.com/evoincorp/lucideblox/tree/master/src/modules/util - Created by 7kayoh
local Icons = {}

local Success, Response = pcall(function()
    Icons = HttpService:JSONDecode(game:HttpGetAsync("https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json")).icons
end)

if not Success then
    warn("\nCanCantHUB Library - Failed to load Feather Icons. Error code: " .. Response .. "\n")
end

local function GetIcon(IconName)
    if Icons[IconName] ~= nil then
        return Icons[IconName]
    else
        return nil
    end
end

local CanCantHUB = Instance.new("ScreenGui")
CanCantHUB.Name = "CanCantHUB"
if syn then
    syn.protect_gui(CanCantHUB)
    CanCantHUB.Parent = game.CoreGui
else
    CanCantHUB.Parent = gethui() or game.CoreGui
end

if gethui then
    for _, Interface in ipairs(gethui():GetChildren()) do
        if Interface.Name == CanCantHUB.Name and Interface ~= CanCantHUB then
            Interface:Destroy()
        end
    end
else
    for _, Interface in ipairs(game.CoreGui:GetChildren()) do
        if Interface.Name == CanCantHUB.Name and Interface ~= CanCantHUB then
            Interface:Destroy()
        end
    end
end

function CanCantHUB:IsRunning()
    if gethui then
        return CanCantHUB.Parent == gethui()
    else
        return CanCantHUB.Parent == game:GetService("CoreGui")
    end

end

local function AddConnection(Signal, Function)
    if (not CanCantHUB:IsRunning()) then
        return
    end
    local SignalConnect = Signal:Connect(Function)
    table.insert(CanCantHUB.Connections, SignalConnect)
    return SignalConnect
end

task.spawn(function()
    while (CanCantHUB:IsRunning()) do
        wait()
    end

    for _, Connection in next, CanCantHUB.Connections do
        Connection:Disconnect()
    end
end)

local function MakeDraggable(DragPoint, Main)
    pcall(function()
        local Dragging, DragInput, MousePos, FramePos = false
        AddConnection(DragPoint.InputBegan, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = true
                MousePos = Input.Position
                FramePos = Main.Position

                Input.Changed:Connect(function()
                    if Input.UserInputState == Enum.UserInputState.End then
                        Dragging = false
                    end
                end)
            end
        end)
        AddConnection(DragPoint.InputChanged, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseMovement then
                DragInput = Input
            end
        end)
        AddConnection(UserInputService.InputChanged, function(Input)
            if Input == DragInput and Dragging then
                local Delta = Input.Position - MousePos
                --TweenService:Create(Main, TweenInfo.new(0.05, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
                Main.Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
            end
        end)
    end)
end

local function Create(Name, Properties, Children)
    local Object = Instance.new(Name)
    for i, v in next, Properties or {} do
        Object[i] = v
    end
    for i, v in next, Children or {} do
        v.Parent = Object
    end
    return Object
end

local function CreateElement(ElementName, ElementFunction)
    CanCantHUB.Elements[ElementName] = function(...)
        return ElementFunction(...)
    end
end

local function MakeElement(ElementName, ...)
    local NewElement = CanCantHUB.Elements[ElementName](...)
    return NewElement
end

local function SetProps(Element, Props)
    table.foreach(Props, function(Property, Value)
        Element[Property] = Value
    end)
    return Element
end

local function SetChildren(Element, Children)
    table.foreach(Children, function(_, Child)
        Child.Parent = Element
    end)
    return Element
end

local function Round(Number, Factor)
    local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
    if Result < 0 then Result = Result + Factor end
    return Result
end

local function ReturnProperty(Object)
    if Object:IsA("Frame") or Object:IsA("TextButton") then
        return "BackgroundColor3"
    end
    if Object:IsA("ScrollingFrame") then
        return "ScrollBarImageColor3"
    end
    if Object:IsA("UIStroke") then
        return "Color"
    end
    if Object:IsA("TextLabel") or Object:IsA("TextBox") then
        return "TextColor3"
    end
    if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
        return "ImageColor3"
    end
end

local function AddThemeObject(Object, Type)
    if not CanCantHUB.ThemeObjects[Type] then
        CanCantHUB.ThemeObjects[Type] = {}
    end
    table.insert(CanCantHUB.ThemeObjects[Type], Object)
    Object[ReturnProperty(Object)] = CanCantHUB.Themes[CanCantHUB.SelectedTheme][Type]
    return Object
end

local function SetTheme()
    for Name, Type in pairs(CanCantHUB.ThemeObjects) do
        for _, Object in pairs(Type) do
            Object[ReturnProperty(Object)] = CanCantHUB.Themes[CanCantHUB.SelectedTheme][Name]
        end
    end
end

local function PackColor(Color)
    return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end

local function UnpackColor(Color)
    return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
    local Data = HttpService:JSONDecode(Config)
    table.foreach(Data, function(a,b)
        if CanCantHUB.Flags[a] then
            spawn(function()
                if CanCantHUB.Flags[a].Type == "Colorpicker" then
                    CanCantHUB.Flags[a]:Set(UnpackColor(b))
                else
                    CanCantHUB.Flags[a]:Set(b)
                end
            end)
        else
            warn("CanCantHUB Library Config Loader - Could not find ", a ,b)
        end
    end)
end

local function SaveCfg(Name)
    local Data = {}
    for i,v in pairs(CanCantHUB.Flags) do
        if v.Save then
            if v.Type == "Colorpicker" then
                Data[i] = PackColor(v.Value)
            else
                Data[i] = v.Value
            end
        end
    end
    writefile(CanCantHUB.Folder .. "/" .. Name .. ".txt", tostring(HttpService:JSONEncode(Data)))
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3}
local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

local function CheckKey(Table, Key)
    for _, v in next, Table do
        if v == Key then
            return true
        end
    end
end

CreateElement("Corner", function(Scale, Offset)
    local Corner = Create("UICorner", {
        CornerRadius = UDim.new(Scale or 0, Offset or 10)
    })
    return Corner
end)

CreateElement("Stroke", function(Color, Thickness)
    local Stroke = Create("UIStroke", {
        Color = Color or Color3.fromRGB(255, 255, 255),
        Thickness = Thickness or 1
    })
    return Stroke
end)

CreateElement("List", function(Scale, Offset)
    local List = Create("UIListLayout", {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(Scale or 0, Offset or 0)
    })
    return List
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
    local Padding = Create("UIPadding", {
        PaddingBottom = UDim.new(0, Bottom or 4),
        PaddingLeft = UDim.new(0, Left or 4),
        PaddingRight = UDim.new(0, Right or 4),
        PaddingTop = UDim.new(0, Top or 4)
    })
    return Padding
end)

CreateElement("TFrame", function()
    local TFrame = Create("Frame", {
        BackgroundTransparency = 1
    })
    return TFrame
end)

CreateElement("Frame", function(Color)
    local Frame = Create("Frame", {
        BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    })
    return Frame
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
    local Frame = Create("Frame", {
        BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    }, {
        Create("UICorner", {
            CornerRadius = UDim.new(Scale, Offset)
        })
    })
    return Frame
end)

CreateElement("Button", function()
    local Button = Create("TextButton", {
        Text = "",
        AutoButtonColor = false,
        BackgroundTransparency = 1,
        BorderSizePixel = 0
    })
    return Button
end)

CreateElement("ScrollFrame", function(Color, Width)
    local ScrollFrame = Create("ScrollingFrame", {
        BackgroundTransparency = 1,
        MidImage = "rbxassetid://7445543667",
        BottomImage = "rbxassetid://7445543667",
        TopImage = "rbxassetid://7445543667",
        ScrollBarImageColor3 = Color,
        BorderSizePixel = 0,
        ScrollBarThickness = Width,
        CanvasSize = UDim2.new(0, 0, 0, 0)
    })
    return ScrollFrame
end)

CreateElement("Image", function(ImageID)
    local ImageNew = Create("ImageLabel", {
        Image = ImageID,
        BackgroundTransparency = 1
    })

    if GetIcon(ImageID) ~= nil then
        ImageNew.Image = GetIcon(ImageID)
    end

    return ImageNew
end)

CreateElement("ImageButton", function(ImageID)
    local Image = Create("ImageButton", {
        Image = ImageID,
        BackgroundTransparency = 1
    })
    return Image
end)

CreateElement("Label", function(Text, TextSize, Transparency)
    local Label = Create("TextLabel", {
        Text = Text or "",
        TextColor3 = Color3.fromRGB(240, 240, 240),
        TextTransparency = Transparency or 0,
        TextSize = TextSize or 15,
        Font = Enum.Font.Gotham,
        RichText = true,
        BackgroundTransparency = 1,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
    SetProps(MakeElement("List"), {
        HorizontalAlignment = Enum.HorizontalAlignment.Center,
        SortOrder = Enum.SortOrder.LayoutOrder,
        VerticalAlignment = Enum.VerticalAlignment.Bottom,
        Padding = UDim.new(0, 5)
    })
}), {
    Position = UDim2.new(1, -25, 1, -25),
    Size = UDim2.new(0, 300, 1, -25),
    AnchorPoint = Vector2.new(1, 1),
    Parent = CanCantHUB
})

function CanCantHUB:MakeNotification(NotificationConfig)
    spawn(function()
        NotificationConfig.Name = NotificationConfig.Name or "Notification"
        NotificationConfig.Content = NotificationConfig.Content or "Test"
        NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
        NotificationConfig.Time = NotificationConfig.Time or 15

        local NotificationParent = SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 0),
            AutomaticSize = Enum.AutomaticSize.Y,
            Parent = NotificationHolder
        })

        local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(25, 25, 25), 0, 10), {
            Parent = NotificationParent,
            Size = UDim2.new(1, 0, 0, 0),
            Position = UDim2.new(1, -55, 0, 0),
            BackgroundTransparency = 0,
            AutomaticSize = Enum.AutomaticSize.Y
        }), {
            MakeElement("Stroke", Color3.fromRGB(93, 93, 93), 1.2),
            MakeElement("Padding", 12, 12, 12, 12),
            SetProps(MakeElement("Image", NotificationConfig.Image), {
                Size = UDim2.new(0, 20, 0, 20),
                ImageColor3 = Color3.fromRGB(240, 240, 240),
                Name = "Icon"
            }),
            SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
                Size = UDim2.new(1, -30, 0, 20),
                Position = UDim2.new(0, 30, 0, 0),
                Font = Enum.Font.GothamBold,
                Name = "Title"
            }),
            SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
                Size = UDim2.new(1, 0, 0, 0),
                Position = UDim2.new(0, 0, 0, 25),
                Font = Enum.Font.GothamSemibold,
                Name = "Content",
                AutomaticSize = Enum.AutomaticSize.Y,
                TextColor3 = Color3.fromRGB(200, 200, 200),
                TextWrapped = true
            })
        })

        TweenService:Create(NotificationFrame, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0, 0)}):Play()

        wait(NotificationConfig.Time - 0.88)
        TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
        TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
        wait(0.3)
        TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
        TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
        TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
        wait(0.05)

        local tweenOut = TweenService:Create(NotificationFrame, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0.35, 0, 1, 0)})
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            NotificationFrame:Destroy()
        end)
    end)
end

function CanCantHUB:Init()
    if CanCantHUB.SaveCfg then
        pcall(function()
            if isfile(CanCantHUB.Folder .. "/" .. game.GameId .. ".txt") then
                LoadCfg(readfile(CanCantHUB.Folder .. "/" .. game.GameId .. ".txt"))
                CanCantHUB:MakeNotification({
                    Name = "Configuration",
                    Content = "Auto-loaded configuration for the game " .. game.GameId .. ".",
                    Time = 5
                })
            end
        end)
    end
end

function CanCantHUB:MakeWindow(WindowConfig)
    local FirstTab = true
    local Minimized = false
    local Loaded = false
    local UIHidden = false

    WindowConfig = WindowConfig or {}
    WindowConfig.Name = WindowConfig.Name or "CanCantHUB Library"
    WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
    WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
    WindowConfig.HidePremium = WindowConfig.HidePremium or false
    if WindowConfig.IntroEnabled == nil then
        WindowConfig.IntroEnabled = true
    end
    WindowConfig.IntroText = WindowConfig.IntroText or "CanCantHUB Library"
    WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
    WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
    WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
    WindowConfig.IntroIcon = WindowConfig.IntroIcon or "rbxassetid://8834748103"
    CanCantHUB.Folder = WindowConfig.ConfigFolder
    CanCantHUB.SaveCfg = WindowConfig.SaveConfig

    if WindowConfig.SaveConfig then
        if not isfolder(WindowConfig.ConfigFolder) then
            makefolder(WindowConfig.ConfigFolder)
        end
    end

    local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
        Size = UDim2.new(1, 0, 1, -50)
    }), {
        MakeElement("List"),
        MakeElement("Padding", 8, 0, 0, 8)
    }), "Divider")

    AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
        TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
    end)

    local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072725342"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18)
        }), "Text")
    })

    local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072719338"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18),
            Name = "Ico"
        }), "Text")
    })

    local DragPoint = SetProps(MakeElement("TFrame"), {
        Size = UDim2.new(1, 0, 0, 50)
    })

    local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
        Size = UDim2.new(0, 150, 1, -50),
        Position = UDim2.new(0, 0, 0, 50)
    }), {
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(1, 0, 0, 10),
            Position = UDim2.new(0, 0, 0, 0)
        }), "Second"),
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(0, 10, 1, 0),
            Position = UDim2.new(1, -10, 0, 0)
        }), "Second"),
        AddThemeObject(SetProps(MakeElement("Frame"), {
            Size = UDim2.new(0, 1, 1, 0),
            Position = UDim2.new(1, -1, 0, 0)
        }), "Stroke"),
        TabHolder,
        SetChildren(SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 50),
            Position = UDim2.new(0, 0, 1, -50)
        }), {
            AddThemeObject(SetProps(MakeElement("Frame"), {
                Size = UDim2.new(1, 0, 0, 1)
            }), "Stroke"),
            AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
                AnchorPoint = Vector2.new(0, 0.5),
                Size = UDim2.new(0, 32, 0, 32),
                Position = UDim2.new(0, 10, 0.5, 0)
            }), {
                SetProps(MakeElement("Image", "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png"), {
                    Size = UDim2.new(1, 0, 1, 0)
                }),
                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://4031889928"), {
                    Size = UDim2.new(1, 0, 1, 0),
                }), "Second"),
                MakeElement("Corner", 1)
            }), "Divider"),
            SetChildren(SetProps(MakeElement("TFrame"), {
                AnchorPoint = Vector2.new(0, 0.5),
                Size = UDim2.new(0, 32, 0, 32),
                Position = UDim2.new(0, 10, 0.5, 0)
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                MakeElement("Corner", 1)
            }),
            AddThemeObject(SetProps(MakeElement("Label", LocalPlayer.DisplayName, WindowConfig.HidePremium and 14 or 13), {
                Size = UDim2.new(1, -60, 0, 13),
                Position = WindowConfig.HidePremium and UDim2.new(0, 50, 0, 19) or UDim2.new(0, 50, 0, 12),
                Font = Enum.Font.GothamBold,
                ClipsDescendants = true
            }), "Text"),
            AddThemeObject(SetProps(MakeElement("Label", "", 12), {
                Size = UDim2.new(1, -60, 0, 12),
                Position = UDim2.new(0, 50, 1, -25),
                Visible = not WindowConfig.HidePremium
            }), "TextDark")
        }),
    }), "Second")

    local WindowName = AddThemeObject(SetProps(MakeElement("Label", WindowConfig.Name, 14), {
        Size = UDim2.new(1, -30, 2, 0),
        Position = UDim2.new(0, 25, 0, -24),
        Font = Enum.Font.GothamBlack,
        TextSize = 20
    }), "Text")

    local WindowTopBarLine = AddThemeObject(SetProps(MakeElement("Frame"), {
        Size = UDim2.new(1, 0, 0, 1),
        Position = UDim2.new(0, 0, 1, -1)
    }), "Stroke")

    local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
        Parent = CanCantHUB,
        Position = UDim2.new(0.5, -307, 0.5, -172),
        Size = UDim2.new(0, 615, 0, 344),
        ClipsDescendants = true
    }), {
        --SetProps(MakeElement("Image", "rbxassetid://3523728077"), {
        --    AnchorPoint = Vector2.new(0.5, 0.5),
        --    Position = UDim2.new(0.5, 0, 0.5, 0),
        --    Size = UDim2.new(1, 80, 1, 320),
        --    ImageColor3 = Color3.fromRGB(33, 33, 33),
        --    ImageTransparency = 0.7
        --}),
        SetChildren(SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 50),
            Name = "TopBar"
        }), {
            WindowName,
            WindowTopBarLine,
            AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
                Size = UDim2.new(0, 70, 0, 30),
                Position = UDim2.new(1, -90, 0, 10)
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Frame"), {
                    Size = UDim2.new(0, 1, 1, 0),
                    Position = UDim2.new(0.5, 0, 0, 0)
                }), "Stroke"),
                CloseBtn,
                MinimizeBtn
            }), "Second"),
        }),
        DragPoint,
        WindowStuff
    }), "Main")

    if WindowConfig.ShowIcon then
        WindowName.Position = UDim2.new(0, 50, 0, -24)
        local WindowIcon = SetProps(MakeElement("Image", WindowConfig.Icon), {
            Size = UDim2.new(0, 20, 0, 20),
            Position = UDim2.new(0, 25, 0, 15)
        })
        WindowIcon.Parent = MainWindow.TopBar
    end

    MakeDraggable(DragPoint, MainWindow)

    AddConnection(CloseBtn.MouseButton1Up, function()
        local tweenOut = TweenService:Create(MainWindow, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0.35, 0, 1, 0)})
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            MainWindow.Visible = false
            UIHidden = true
            CanCantHUB:MakeNotification({
                Name = "Interface Hidden",
                Content = "Tap RightShift to reopen the interface",
                Time = 5
            })
            WindowConfig.CloseCallback()
        end)
    end)

    AddConnection(UserInputService.InputBegan, function(Input)
        if Input.KeyCode == Enum.KeyCode.RightShift and UIHidden then
            local tweenIn = TweenService:Create(MainWindow, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0.35, 0, 0.45, 0)})
            tweenIn:Play()
            MainWindow.Visible = true
        end
    end)

    AddConnection(MinimizeBtn.MouseButton1Up, function()
        if Minimized then
            TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Size = UDim2.new(0, 615, 0, 344)}):Play()
            MinimizeBtn.Ico.Image = "rbxassetid://7072719338"
            wait(.02)
            MainWindow.ClipsDescendants = false
            WindowStuff.Visible = true
            WindowTopBarLine.Visible = true
        else
            MainWindow.ClipsDescendants = true
            WindowTopBarLine.Visible = false
            MinimizeBtn.Ico.Image = "rbxassetid://7072720870"

            TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Size = UDim2.new(0, WindowName.TextBounds.X + 140, 0, 50)}):Play()
            wait(0.1)
            WindowStuff.Visible = false
        end
        Minimized = not Minimized
    end)

    local function LoadSequence()
        MainWindow.Visible = false
        local LoadSequenceLogo = SetProps(MakeElement("Image", WindowConfig.IntroIcon), {
            Parent = CanCantHUB,
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.4, 0),
            Size = UDim2.new(0, 28, 0, 28),
            ImageColor3 = Color3.fromRGB(255, 255, 255),
            ImageTransparency = 1
        })

        local LoadSequenceText = SetProps(MakeElement("Label", WindowConfig.IntroText, 14), {
            Parent = CanCantHUB,
            Size = UDim2.new(1, 0, 1, 0),
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 19, 0.5, 0),
            TextXAlignment = Enum.TextXAlignment.Center,
            Font = Enum.Font.GothamBold,
            TextTransparency = 1
        })

        TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0, Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
        wait(0.8)
        TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -(LoadSequenceText.TextBounds.X/2), 0.5, 0)}):Play()
        wait(0.3)
        TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
        wait(2)
        TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        local tweenIn = TweenService:Create(MainWindow, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0.35, 0, 0.45, 0)})
        tweenIn:Play()
        MainWindow.Visible = true
        LoadSequenceLogo:Destroy()
        LoadSequenceText:Destroy()
    end

    if WindowConfig.IntroEnabled then
        LoadSequence()
    end

    local TabFunction = {}
    function TabFunction:MakeTab(TabConfig)
        TabConfig = TabConfig or {}
        TabConfig.Name = TabConfig.Name or "Tab"
        TabConfig.Icon = TabConfig.Icon or ""
        TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

        local TabFrame = SetChildren(SetProps(MakeElement("Button"), {
            Size = UDim2.new(1, 0, 0, 30),
            Parent = TabHolder
        }), {
            AddThemeObject(SetProps(MakeElement("Image", TabConfig.Icon), {
                AnchorPoint = Vector2.new(0, 0.5),
                Size = UDim2.new(0, 18, 0, 18),
                Position = UDim2.new(0, 10, 0.5, 0),
                ImageTransparency = 0.4,
                Name = "Ico"
            }), "Text"),
            AddThemeObject(SetProps(MakeElement("Label", TabConfig.Name, 14), {
                Size = UDim2.new(1, -35, 1, 0),
                Position = UDim2.new(0, 35, 0, 0),
                Font = Enum.Font.GothamSemibold,
                TextTransparency = 0.4,
                Name = "Title"
            }), "Text")
        })

        if GetIcon(TabConfig.Icon) ~= nil then
            TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
        end

        local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 5), {
            Size = UDim2.new(1, -150, 1, -50),
            Position = UDim2.new(0, 150, 0, 50),
            Parent = MainWindow,
            Visible = false,
            Name = "ItemContainer"
        }), {
            MakeElement("List", 0, 6),
            MakeElement("Padding", 15, 10, 10, 15)
        }), "Divider")

        AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
            Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
        end)

        if FirstTab then
            FirstTab = false
            TabFrame.Ico.ImageTransparency = 0
            TabFrame.Title.TextTransparency = 0
            TabFrame.Title.Font = Enum.Font.GothamBlack
            Container.Visible = true
        end

        AddConnection(TabFrame.MouseButton1Click, function()
            for _, Tab in next, TabHolder:GetChildren() do
                if Tab:IsA("TextButton") then
                    Tab.Title.Font = Enum.Font.GothamSemibold
                    TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
                    TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
                end
            end
            for _, ItemContainer in next, MainWindow:GetChildren() do
                if ItemContainer.Name == "ItemContainer" then
                    ItemContainer.Visible = false
                end
            end
            TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
            TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
            TabFrame.Title.Font = Enum.Font.GothamBlack
            Container.Visible = true
        end)

        local function GetElements(ItemParent)
            local ElementFunction = {}
            function ElementFunction:AddLabel(Text)
                local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 30),
                    BackgroundTransparency = 0.7,
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                        Size = UDim2.new(1, -12, 1, 0),
                        Position = UDim2.new(0, 12, 0, 0),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke")
                }), "Second")

                local LabelFunction = {}
                function LabelFunction:Set(ToChange)
                    LabelFrame.Content.Text = ToChange
                end
                return LabelFunction
            end
            function ElementFunction:AddParagraph(Text, Content)
                Text = Text or "Text"
                Content = Content or "Content"

                local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 30),
                    BackgroundTransparency = 0.7,
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                        Size = UDim2.new(1, -12, 0, 14),
                        Position = UDim2.new(0, 12, 0, 10),
                        Font = Enum.Font.GothamBold,
                        Name = "Title"
                    }), "Text"),
                    AddThemeObject(SetProps(MakeElement("Label", "", 13), {
                        Size = UDim2.new(1, -24, 0, 0),
                        Position = UDim2.new(0, 12, 0, 26),
                        Font = Enum.Font.GothamSemibold,
                        Name = "Content",
                        TextWrapped = true
                    }), "TextDark"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke")
                }), "Second")

                AddConnection(ParagraphFrame.Content:GetPropertyChangedSignal("Text"), function()
                    ParagraphFrame.Content.Size = UDim2.new(1, -24, 0, ParagraphFrame.Content.TextBounds.Y)
                    ParagraphFrame.Size = UDim2.new(1, 0, 0, ParagraphFrame.Content.TextBounds.Y + 35)
                end)

                ParagraphFrame.Content.Text = Content

                local ParagraphFunction = {}
                function ParagraphFunction:Set(ToChange)
                    ParagraphFrame.Content.Text = ToChange
                end
                return ParagraphFunction
            end
            function ElementFunction:AddButton(ButtonConfig)
                ButtonConfig = ButtonConfig or {}
                ButtonConfig.Name = ButtonConfig.Name or "Button"
                ButtonConfig.Callback = ButtonConfig.Callback or function() end
                ButtonConfig.Icon = ButtonConfig.Icon or "rbxassetid://3944703587"

                local Button = {}

                local Click = SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                })

                local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 33),
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", ButtonConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 1, 0),
                        Position = UDim2.new(0, 12, 0, 0),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(SetProps(MakeElement("Image", ButtonConfig.Icon), {
                        Size = UDim2.new(0, 20, 0, 20),
                        Position = UDim2.new(1, -30, 0, 7),
                    }), "TextDark"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    Click
                }), "Second")

                AddConnection(Click.MouseEnter, function()
                    TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(Click.MouseLeave, function()
                    TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                end)

                AddConnection(Click.MouseButton1Up, function()
                    TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                    spawn(function()
                        ButtonConfig.Callback()
                    end)
                end)

                AddConnection(Click.MouseButton1Down, function()
                    TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 6, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 6, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 6)}):Play()
                end)

                function Button:Set(ButtonText)
                    ButtonFrame.Content.Text = ButtonText
                end

                return Button
            end
            function ElementFunction:AddToggle(ToggleConfig)
                ToggleConfig = ToggleConfig or {}
                ToggleConfig.Name = ToggleConfig.Name or "Toggle"
                ToggleConfig.Default = ToggleConfig.Default or false
                ToggleConfig.Callback = ToggleConfig.Callback or function() end
                ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
                ToggleConfig.Flag = ToggleConfig.Flag or nil
                ToggleConfig.Save = ToggleConfig.Save or false

                local Toggle = {Value = ToggleConfig.Default, Save = ToggleConfig.Save}

                local Click = SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                })

                local ToggleBox = SetChildren(SetProps(MakeElement("RoundFrame", ToggleConfig.Color, 0, 4), {
                    Size = UDim2.new(0, 24, 0, 24),
                    Position = UDim2.new(1, -24, 0.5, 0),
                    AnchorPoint = Vector2.new(0.5, 0.5)
                }), {
                    SetProps(MakeElement("Stroke"), {
                        Color = ToggleConfig.Color,
                        Name = "Stroke",
                        Transparency = 0.5
                    }),
                    SetProps(MakeElement("Image", "rbxassetid://3944680095"), {
                        Size = UDim2.new(0, 20, 0, 20),
                        AnchorPoint = Vector2.new(0.5, 0.5),
                        Position = UDim2.new(0.5, 0, 0.5, 0),
                        ImageColor3 = Color3.fromRGB(255, 255, 255),
                        Name = "Ico"
                    }),
                })

                local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 38),
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 1, 0),
                        Position = UDim2.new(0, 12, 0, 0),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    ToggleBox,
                    Click
                }), "Second")

                function Toggle:Set(Value)
                    Toggle.Value = Value
                    TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or CanCantHUB.Themes.Default.Divider}):Play()
                    TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or CanCantHUB.Themes.Default.Stroke}):Play()
                    TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
                    ToggleConfig.Callback(Toggle.Value)
                end

                Toggle:Set(Toggle.Value)

                AddConnection(Click.MouseEnter, function()
                    TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(Click.MouseLeave, function()
                    TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                end)

                AddConnection(Click.MouseButton1Up, function()
                    Toggle.Value = not Toggle.Value
                    Toggle:Set(Toggle.Value)
                end)

                if ToggleConfig.Flag then
                    CanCantHUB.Flags[ToggleConfig.Flag] = Toggle
                end

                return Toggle
            end
            function ElementFunction:AddSlider(SliderConfig)
                SliderConfig = SliderConfig or {}
                SliderConfig.Name = SliderConfig.Name or "Slider"
                SliderConfig.Default = SliderConfig.Default or 50
                SliderConfig.Min = SliderConfig.Min or 0
                SliderConfig.Max = SliderConfig.Max or 100
                SliderConfig.Increment = SliderConfig.Increment or 1
                SliderConfig.Callback = SliderConfig.Callback or function() end
                SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 99, 195)
                SliderConfig.ValueName = SliderConfig.ValueName or ""
                SliderConfig.Flag = SliderConfig.Flag or nil
                SliderConfig.Save = SliderConfig.Save or false

                local Slider = {Value = SliderConfig.Default, Save = SliderConfig.Save}

                local Touch = false

                local SliderDrag = SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                })

                local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 54),
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 0, 14),
                        Position = UDim2.new(0, 12, 0, 10),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    SetChildren(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(1, -24, 0, 2),
                        Position = UDim2.new(0, 12, 0, 38)
                    }), {
                        AddThemeObject(SetProps(MakeElement("Frame"), {
                            Size = UDim2.new(0, 0, 1, 0),
                            BackgroundColor3 = SliderConfig.Color,
                            Name = "Fill"
                        }), "Divider")
                    }),
                    AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 1, 0), {
                        Size = UDim2.new(0, 10, 0, 10),
                        Position = UDim2.new(0, 7, 0, 34),
                        Name = "DragPoint"
                    }), {
                        SetProps(MakeElement("Stroke"), {
                            Color = SliderConfig.Color
                        })
                    }), "Main"),
                    AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Default .. " " .. SliderConfig.ValueName, 15), {
                        Size = UDim2.new(1, -12, 0, 14),
                        Position = UDim2.new(0, 12, 0, 38),
                        Font = Enum.Font.GothamBold,
                        Name = "SliderValue"
                    }), "Text"),
                    SliderDrag
                }), "Second")

                local function Snap(Value)
                    if SliderConfig.Increment == 0 then
                        return Value
                    else
                        return math.floor((Value / SliderConfig.Increment) + 0.5) * SliderConfig.Increment
                    end
                end

                function Slider:Set(Value)
                    local percent = (math.clamp(Value, SliderConfig.Min, SliderConfig.Max) - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min)
                    local BarSize = UDim2.new(percent, 0, 1, 0)
                    local Position = UDim2.new(percent, -7, 0, 34)

                    SliderFrame.DragPoint.Position = Position
                    SliderFrame.Fill.Size = BarSize
                    SliderFrame.SliderValue.Text = Value .. " " .. SliderConfig.ValueName
                    Slider.Value = Value
                    SliderConfig.Callback(Value)
                end

                AddConnection(SliderDrag.MouseButton1Down, function(Input)
                    Touch = true
                    local mLocation = UserInputService:GetMouseLocation()
                    local X = mLocation.X
                    local Scale = math.clamp(X - SliderFrame.Fill.AbsolutePosition.X, 0, 210) / 210
                    local Value = Snap(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * Scale))
                    TweenService:Create(SliderFrame.DragPoint, TweenInfo.new(0.1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(Scale, -7, 0, 34)}):Play()
                    Slider:Set(Value)
                end)

                AddConnection(UserInputService.InputChanged, function(Input)
                    if Touch and Input.UserInputType == Enum.UserInputType.MouseMovement then
                        local mLocation = UserInputService:GetMouseLocation()
                        local X = mLocation.X
                        local Scale = math.clamp(X - SliderFrame.Fill.AbsolutePosition.X, 0, 210) / 210
                        local Value = Snap(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * Scale))
                        TweenService:Create(SliderFrame.DragPoint, TweenInfo.new(0.1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(Scale, -7, 0, 34)}):Play()
                        Slider:Set(Value)
                    end
                end)

                AddConnection(UserInputService.InputEnded, function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and Touch then
                        Touch = false
                    end
                end)

                AddConnection(SliderDrag.MouseEnter, function()
                    TweenService:Create(SliderFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(SliderDrag.MouseLeave, function()
                    TweenService:Create(SliderFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                end)

                if SliderConfig.Flag then
                    CanCantHUB.Flags[SliderConfig.Flag] = Slider
                end

                Slider:Set(Slider.Value)
                return Slider
            end
            function ElementFunction:AddDropdown(DropdownConfig)
                DropdownConfig = DropdownConfig or {}
                DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
                DropdownConfig.Callback = DropdownConfig.Callback or function() end
                DropdownConfig.Options = DropdownConfig.Options or {}
                DropdownConfig.Default = DropdownConfig.Default or DropdownConfig.Options[1]
                DropdownConfig.Flag = DropdownConfig.Flag or nil
                DropdownConfig.Save = DropdownConfig.Save or false
                DropdownConfig.Multi = DropdownConfig.Multi or false

                local Dropdown = {Values = {}, Save = DropdownConfig.Save}
                local Opened = false

                local DropButton = SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                })

                local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 38),
                    Parent = ItemParent,
                    ClipsDescendants = true
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 0, 14),
                        Position = UDim2.new(0, 12, 0, 10),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072717858"), {
                        Size = UDim2.new(0, 20, 0, 20),
                        Position = UDim2.new(1, -30, 0, 10),
                        ImageColor3 = Color3.fromRGB(180, 180, 180),
                        Name = "Arrow"
                    }), "TextDark"),
                    DropButton
                }), "Second")

                local OptionHolder = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, -20, 0, 10 + (#DropdownConfig.Options * 32)),
                    Position = UDim2.new(0, 10, 0, 38),
                    Parent = DropdownFrame
                }), {
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(1, 0, 0, 1),
                        Position = UDim2.new(0, 0, 0, 0)
                    }), {
                        AddThemeObject(MakeElement("Stroke"), "Stroke")
                    }), "Second"),
                    SetProps(MakeElement("List", 0, 2), {
                        SortOrder = Enum.SortOrder.LayoutOrder
                    }),
                    AddThemeObject(MakeElement("Padding", 0, 6, 6, 0), "Second")
                }), "Second")

                DropdownFrame.Size = UDim2.new(1, 0, 0, 38)

                AddConnection(DropButton.MouseButton1Up, function()
                    if Opened then
                        TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10)}):Play()
                        TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 38)}):Play()
                        TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                        wait(0.3)
                        OptionHolder.Visible = false
                        DropdownFrame.ClipsDescendants = true
                    else
                        DropdownFrame.ClipsDescendants = false
                        OptionHolder.Visible = true
                        TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10 + (#DropdownConfig.Options * 32))}):Play()
                        TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, (10 + (#DropdownConfig.Options * 32)) + 38)}):Play()
                        TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 180}):Play()
                    end
                    Opened = not Opened
                end)

                AddConnection(DropButton.MouseEnter, function()
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(DropButton.MouseLeave, function()
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                end)

                for i, Option in ipairs(DropdownConfig.Options) do
                    local OptionButton = SetProps(MakeElement("Button"), {
                        Size = UDim2.new(1, 0, 1, 0)
                    })

                    local OptionFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                        Size = UDim2.new(1, 0, 0, 30),
                        Parent = OptionHolder
                    }), {
                        AddThemeObject(SetProps(MakeElement("Label", Option, 15), {
                            Size = UDim2.new(1, -12, 1, 0),
                            Position = UDim2.new(0, 12, 0, 0),
                            Font = Enum.Font.GothamBold,
                            Name = "Content"
                        }), "Text"),
                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                        OptionButton
                    }), "Second")

                    AddConnection(OptionButton.MouseButton1Up, function()
                        if not DropdownConfig.Multi then
                            TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10)}):Play()
                            TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 38)}):Play()
                            TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            wait(0.3)
                            OptionHolder.Visible = false
                            DropdownFrame.ClipsDescendants = true
                            Opened = not Opened
                        end
                        if DropdownConfig.Multi and table.find(Dropdown.Values, Option) then
                            for i, v in pairs(Dropdown.Values) do
                                if v == Option then
                                    table.remove(Dropdown.Values, i)
                                end
                            end
                        else
                            if DropdownConfig.Multi then
                                table.insert(Dropdown.Values, Option)
                            else
                                Dropdown.Values = {Option}
                            end
                        end
                        spawn(function()
                            if not DropdownConfig.Multi then
                                DropdownConfig.Callback(Option)
                            else
                                DropdownConfig.Callback(Dropdown.Values)
                            end
                        end)
                        if DropdownConfig.Multi then
                            TweenService:Create(OptionFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = table.find(Dropdown.Values, Option) and 0.3 or 0}):Play()
                        else
                            TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.3}):Play()
                            TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Text = Option}):Play()
                            wait(0.2)
                            TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        end
                    end)

                    AddConnection(OptionButton.MouseEnter, function()
                        TweenService:Create(OptionFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                    end)

                    AddConnection(OptionButton.MouseLeave, function()
                        TweenService:Create(OptionFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                    end)
                end

                if DropdownConfig.Flag then
                    CanCantHUB.Flags[DropdownConfig.Flag] = Dropdown
                end

                return Dropdown
            end
            function ElementFunction:AddTextbox(TextboxConfig)
                TextboxConfig = TextboxConfig or {}
                TextboxConfig.Name = TextboxConfig.Name or "Textbox"
                TextboxConfig.Default = TextboxConfig.Default or ""
                TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
                TextboxConfig.Callback = TextboxConfig.Callback or function() end

                local Textbox = {Value = TextboxConfig.Default}

                local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 38),
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 0, 14),
                        Position = UDim2.new(0, 12, 0, 10),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    AddThemeObject(SetProps(MakeElement("TextBox", TextboxConfig.Default, 15), {
                        Size = UDim2.new(1, -24, 0, 30),
                        Position = UDim2.new(0, 12, 0, 22),
                        Font = Enum.Font.GothamSemibold,
                        TextColor3 = Color3.fromRGB(240, 240, 240),
                        PlaceholderColor3 = Color3.fromRGB(210, 210, 210),
                        TextXAlignment = Enum.TextXAlignment.Left,
                        Name = "Textbox"
                    }), "TextDark")
                }), "Second")

                AddConnection(TextboxFrame.Textbox.Focused, function()
                    TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(TextboxFrame.Textbox.FocusLost, function()
                    TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                    if TextboxConfig.TextDisappear then
                        TextboxFrame.Textbox.Text = ""
                    end
                    Textbox.Value = TextboxFrame.Textbox.Text
                    TextboxConfig.Callback(Textbox.Value)
                end)

                AddConnection(TextboxFrame.Textbox.Focused, function()
                    TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(TextboxFrame.Textbox.FocusLost, function()
                    TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                    if TextboxConfig.TextDisappear then
                        TextboxFrame.Textbox.Text = ""
                    end
                    Textbox.Value = TextboxFrame.Textbox.Text
                    TextboxConfig.Callback(Textbox.Value)
                end)

                return Textbox
            end
            function ElementFunction:AddKeybind(KeybindConfig)
                KeybindConfig = KeybindConfig or {}
                KeybindConfig.Name = KeybindConfig.Name or "Keybind"
                KeybindConfig.Default = KeybindConfig.Default or Enum.KeyCode.RightShift
                KeybindConfig.Callback = KeybindConfig.Callback or function() end

                local Keybind = {Value = KeybindConfig.Default, Binding = false}

                local KeybindFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 38),
                    Parent = ItemParent
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", KeybindConfig.Name, 15), {
                        Size = UDim2.new(1, -12, 1, 0),
                        Position = UDim2.new(0, 12, 0, 0),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    AddThemeObject(SetProps(MakeElement("Label", Keybind.Value.Name, 15), {
                        Size = UDim2.new(0, 30, 0, 30),
                        Position = UDim2.new(1, -40, 0, 4),
                        Font = Enum.Font.GothamBold,
                        TextXAlignment = Enum.TextXAlignment.Right,
                        Name = "Bind"
                    }), "TextDark")
                }), "Second")

                local Click = MakeElement("Button")
                Click.Size = UDim2.new(0, 30, 0, 30)
                Click.Position = UDim2.new(1, -40, 0, 4)
                Click.Text = ""
                Click.BackgroundTransparency = 1
                Click.Parent = KeybindFrame

                AddConnection(Click.MouseButton1Click, function()
                    Click.Text = ""
                    Click.Size = UDim2.new(0, 35, 0, 30)
                    Click.Position = UDim2.new(1, -45, 0, 4)
                    KeybindFrame.Bind.Text = "..."
                    Keybind.Binding = true
                end)

                AddConnection(UserInputService.InputBegan, function(Input)
                    if Keybind.Binding then
                        if Input.UserInputType == Enum.UserInputType.Keyboard and (not CheckKey(BlacklistedKeys, Input.KeyCode)) then
                            Keybind.Value = Input.KeyCode
                        elseif Input.UserInputType == Enum.UserInputType.MouseButton2 or Input.UserInputType == Enum.UserInputType.MouseButton3 then
                            Keybind.Value = Enum.UserInputType[Input.UserInputType.Name]
                        end
                        KeybindConfig.Callback(Keybind.Value)
                        Keybind.Binding = false
                        Click.Size = UDim2.new(0, 30, 0, 30)
                        Click.Position = UDim2.new(1, -40, 0, 4)
                        KeybindFrame.Bind.Text = Keybind.Value.Name
                    end
                end)

                return Keybind
            end

            return ElementFunction
        end

        local TabElements = GetElements(Container)

        return TabElements
    end

    return TabFunction
end

function CanCantHUB:MakeTab(TabConfig)
    TabConfig = TabConfig or {}
    TabConfig.Name = TabConfig.Name or "Tab"
    TabConfig.Icon = TabConfig.Icon or ""
    TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

    local TabFrame = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(1, 0, 0, 30),
        Parent = TabHolder
    }), {
        AddThemeObject(SetProps(MakeElement("Image", TabConfig.Icon), {
            AnchorPoint = Vector2.new(0, 0.5),
            Size = UDim2.new(0, 18, 0, 18),
            Position = UDim2.new(0, 10, 0.5, 0),
            ImageTransparency = 0.4,
            Name = "Ico"
        }), "Text"),
        AddThemeObject(SetProps(MakeElement("Label", TabConfig.Name, 14), {
            Size = UDim2.new(1, -35, 1, 0),
            Position = UDim2.new(0, 35, 0, 0),
            Font = Enum.Font.GothamSemibold,
            TextTransparency = 0.4,
            Name = "Title"
        }), "Text")
    })

    if GetIcon(TabConfig.Icon) ~= nil then
        TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
    end

    local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 5), {
        Size = UDim2.new(1, -150, 1, -50),
        Position = UDim2.new(0, 150, 0, 50),
        Parent = MainWindow,
        Visible = false,
        Name = "ItemContainer"
    }), {
        MakeElement("List", 0, 6),
        MakeElement("Padding", 15, 10, 10, 15)
    }), "Divider")

    AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
        Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
    end)

    if FirstTab then
        FirstTab = false
        TabFrame.Ico.ImageTransparency = 0
        TabFrame.Title.TextTransparency = 0
        TabFrame.Title.Font = Enum.Font.GothamBlack
        Container.Visible = true
    end

    AddConnection(TabFrame.MouseButton1Click, function()
        for _, Tab in next, TabHolder:GetChildren() do
            if Tab:IsA("TextButton") then
                Tab.Title.Font = Enum.Font.GothamSemibold
                TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
                TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
            end
        end
        for _, ItemContainer in next, MainWindow:GetChildren() do
            if ItemContainer.Name == "ItemContainer" then
                ItemContainer.Visible = false
            end
        end
        TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
        TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
        TabFrame.Title.Font = Enum.Font.GothamBlack
        Container.Visible = true
    end)

    local function GetElements(ItemParent)
        local ElementFunction = {}
        function ElementFunction:AddLabel(Text)
            local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundTransparency = 0.7,
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                    Size = UDim2.new(1, -12, 1, 0),
                    Position = UDim2.new(0, 12, 0, 0),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke")
            }), "Second")

            local LabelFunction = {}
            function LabelFunction:Set(ToChange)
                LabelFrame.Content.Text = ToChange
            end
            return LabelFunction
        end
        function ElementFunction:AddParagraph(Text, Content)
            Text = Text or "Text"
            Content = Content or "Content"

            local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundTransparency = 0.7,
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                    Size = UDim2.new(1, -12, 0, 14),
                    Position = UDim2.new(0, 12, 0, 10),
                    Font = Enum.Font.GothamBold,
                    Name = "Title"
                }), "Text"),
                AddThemeObject(SetProps(MakeElement("Label", "", 13), {
                    Size = UDim2.new(1, -24, 0, 0),
                    Position = UDim2.new(0, 12, 0, 26),
                    Font = Enum.Font.GothamSemibold,
                    Name = "Content",
                    TextWrapped = true
                }), "TextDark"),
                AddThemeObject(MakeElement("Stroke"), "Stroke")
            }), "Second")

            AddConnection(ParagraphFrame.Content:GetPropertyChangedSignal("Text"), function()
                ParagraphFrame.Content.Size = UDim2.new(1, -24, 0, ParagraphFrame.Content.TextBounds.Y)
                ParagraphFrame.Size = UDim2.new(1, 0, 0, ParagraphFrame.Content.TextBounds.Y + 35)
            end)

            ParagraphFrame.Content.Text = Content

            local ParagraphFunction = {}
            function ParagraphFunction:Set(ToChange)
                ParagraphFrame.Content.Text = ToChange
            end
            return ParagraphFunction
        end
        function ElementFunction:AddButton(ButtonConfig)
            ButtonConfig = ButtonConfig or {}
            ButtonConfig.Name = ButtonConfig.Name or "Button"
            ButtonConfig.Callback = ButtonConfig.Callback or function() end
            ButtonConfig.Icon = ButtonConfig.Icon or "rbxassetid://3944703587"

            local Button = {}

            local Click = SetProps(MakeElement("Button"), {
                Size = UDim2.new(1, 0, 1, 0)
            })

            local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 33),
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", ButtonConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 1, 0),
                    Position = UDim2.new(0, 12, 0, 0),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(SetProps(MakeElement("Image", ButtonConfig.Icon), {
                    Size = UDim2.new(0, 20, 0, 20),
                    Position = UDim2.new(1, -30, 0, 7),
                }), "TextDark"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                Click
            }), "Second")

            AddConnection(Click.MouseEnter, function()
                TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(Click.MouseLeave, function()
                TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
            end)

            AddConnection(Click.MouseButton1Up, function()
                TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                spawn(function()
                    ButtonConfig.Callback()
                end)
            end)

            AddConnection(Click.MouseButton1Down, function()
                TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 6, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 6, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 6)}):Play()
            end)

            function Button:Set(ButtonText)
                ButtonFrame.Content.Text = ButtonText
            end

            return Button
        end
        function ElementFunction:AddToggle(ToggleConfig)
            ToggleConfig = ToggleConfig or {}
            ToggleConfig.Name = ToggleConfig.Name or "Toggle"
            ToggleConfig.Default = ToggleConfig.Default or false
            ToggleConfig.Callback = ToggleConfig.Callback or function() end
            ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
            ToggleConfig.Flag = ToggleConfig.Flag or nil
            ToggleConfig.Save = ToggleConfig.Save or false

            local Toggle = {Value = ToggleConfig.Default, Save = ToggleConfig.Save}

            local Click = SetProps(MakeElement("Button"), {
                Size = UDim2.new(1, 0, 1, 0)
            })

            local ToggleBox = SetChildren(SetProps(MakeElement("RoundFrame", ToggleConfig.Color, 0, 4), {
                Size = UDim2.new(0, 24, 0, 24),
                Position = UDim2.new(1, -24, 0.5, 0),
                AnchorPoint = Vector2.new(0.5, 0.5)
            }), {
                SetProps(MakeElement("Stroke"), {
                    Color = ToggleConfig.Color,
                    Name = "Stroke",
                    Transparency = 0.5
                }),
                SetProps(MakeElement("Image", "rbxassetid://3944680095"), {
                    Size = UDim2.new(0, 20, 0, 20),
                    AnchorPoint = Vector2.new(0.5, 0.5),
                    Position = UDim2.new(0.5, 0, 0.5, 0),
                    ImageColor3 = Color3.fromRGB(255, 255, 255),
                    Name = "Ico"
                }),
            })

            local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 38),
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 1, 0),
                    Position = UDim2.new(0, 12, 0, 0),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                ToggleBox,
                Click
            }), "Second")

            function Toggle:Set(Value)
                Toggle.Value = Value
                TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or CanCantHUB.Themes.Default.Divider}):Play()
                TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or CanCantHUB.Themes.Default.Stroke}):Play()
                TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
                ToggleConfig.Callback(Toggle.Value)
            end

            Toggle:Set(Toggle.Value)

            AddConnection(Click.MouseEnter, function()
                TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(Click.MouseLeave, function()
                TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
            end)

            AddConnection(Click.MouseButton1Up, function()
                Toggle.Value = not Toggle.Value
                Toggle:Set(Toggle.Value)
            end)

            if ToggleConfig.Flag then
                CanCantHUB.Flags[ToggleConfig.Flag] = Toggle
            end

            return Toggle
        end
        function ElementFunction:AddSlider(SliderConfig)
            SliderConfig = SliderConfig or {}
            SliderConfig.Name = SliderConfig.Name or "Slider"
            SliderConfig.Default = SliderConfig.Default or 50
            SliderConfig.Min = SliderConfig.Min or 0
            SliderConfig.Max = SliderConfig.Max or 100
            SliderConfig.Increment = SliderConfig.Increment or 1
            SliderConfig.Callback = SliderConfig.Callback or function() end
            SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 99, 195)
            SliderConfig.ValueName = SliderConfig.ValueName or ""
            SliderConfig.Flag = SliderConfig.Flag or nil
            SliderConfig.Save = SliderConfig.Save or false

            local Slider = {Value = SliderConfig.Default, Save = SliderConfig.Save}

            local Touch = false

            local SliderDrag = SetProps(MakeElement("Button"), {
                Size = UDim2.new(1, 0, 1, 0)
            })

            local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 54),
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 0, 14),
                    Position = UDim2.new(0, 12, 0, 10),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Frame"), {
                    Size = UDim2.new(1, -24, 0, 2),
                    Position = UDim2.new(0, 12, 0, 38)
                }), {
                    AddThemeObject(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(0, 0, 1, 0),
                        BackgroundColor3 = SliderConfig.Color,
                        Name = "Fill"
                    }), "Divider")
                }),
                AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 1, 0), {
                    Size = UDim2.new(0, 10, 0, 10),
                    Position = UDim2.new(0, 7, 0, 34),
                    Name = "DragPoint"
                }), {
                    SetProps(MakeElement("Stroke"), {
                        Color = SliderConfig.Color
                    })
                }), "Main"),
                AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Default .. " " .. SliderConfig.ValueName, 15), {
                    Size = UDim2.new(1, -12, 0, 14),
                    Position = UDim2.new(0, 12, 0, 38),
                    Font = Enum.Font.GothamBold,
                    Name = "SliderValue"
                }), "Text"),
                SliderDrag
            }), "Second")

            local function Snap(Value)
                if SliderConfig.Increment == 0 then
                    return Value
                else
                    return math.floor((Value / SliderConfig.Increment) + 0.5) * SliderConfig.Increment
                end
            end

            function Slider:Set(Value)
                local percent = (math.clamp(Value, SliderConfig.Min, SliderConfig.Max) - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min)
                local BarSize = UDim2.new(percent, 0, 1, 0)
                local Position = UDim2.new(percent, -7, 0, 34)

                SliderFrame.DragPoint.Position = Position
                SliderFrame.Fill.Size = BarSize
                SliderFrame.SliderValue.Text = Value .. " " .. SliderConfig.ValueName
                Slider.Value = Value
                SliderConfig.Callback(Value)
            end

            AddConnection(SliderDrag.MouseButton1Down, function(Input)
                Touch = true
                local mLocation = UserInputService:GetMouseLocation()
                local X = mLocation.X
                local Scale = math.clamp(X - SliderFrame.Fill.AbsolutePosition.X, 0, 210) / 210
                local Value = Snap(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * Scale))
                TweenService:Create(SliderFrame.DragPoint, TweenInfo.new(0.1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(Scale, -7, 0, 34)}):Play()
                Slider:Set(Value)
            end)

            AddConnection(UserInputService.InputChanged, function(Input)
                if Touch and Input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mLocation = UserInputService:GetMouseLocation()
                    local X = mLocation.X
                    local Scale = math.clamp(X - SliderFrame.Fill.AbsolutePosition.X, 0, 210) / 210
                    local Value = Snap(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * Scale))
                    TweenService:Create(SliderFrame.DragPoint, TweenInfo.new(0.1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(Scale, -7, 0, 34)}):Play()
                    Slider:Set(Value)
                end
            end)

            AddConnection(UserInputService.InputEnded, function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and Touch then
                    Touch = false
                end
            end)

            AddConnection(SliderDrag.MouseEnter, function()
                TweenService:Create(SliderFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(SliderDrag.MouseLeave, function()
                TweenService:Create(SliderFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
            end)

            if SliderConfig.Flag then
                CanCantHUB.Flags[SliderConfig.Flag] = Slider
            end

            Slider:Set(Slider.Value)
            return Slider
        end
        function ElementFunction:AddDropdown(DropdownConfig)
            DropdownConfig = DropdownConfig or {}
            DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
            DropdownConfig.Callback = DropdownConfig.Callback or function() end
            DropdownConfig.Options = DropdownConfig.Options or {}
            DropdownConfig.Default = DropdownConfig.Default or DropdownConfig.Options[1]
            DropdownConfig.Flag = DropdownConfig.Flag or nil
            DropdownConfig.Save = DropdownConfig.Save or false
            DropdownConfig.Multi = DropdownConfig.Multi or false

            local Dropdown = {Values = {}, Save = DropdownConfig.Save}
            local Opened = false

            local DropButton = SetProps(MakeElement("Button"), {
                Size = UDim2.new(1, 0, 1, 0)
            })

            local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 38),
                Parent = ItemParent,
                ClipsDescendants = true
            }), {
                AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 0, 14),
                    Position = UDim2.new(0, 12, 0, 10),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072717858"), {
                    Size = UDim2.new(0, 20, 0, 20),
                    Position = UDim2.new(1, -30, 0, 10),
                    ImageColor3 = Color3.fromRGB(180, 180, 180),
                    Name = "Arrow"
                }), "TextDark"),
                DropButton
            }), "Second")

            local OptionHolder = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, -20, 0, 10 + (#DropdownConfig.Options * 32)),
                Position = UDim2.new(0, 10, 0, 38),
                Parent = DropdownFrame
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
                    Size = UDim2.new(1, 0, 0, 1),
                    Position = UDim2.new(0, 0, 0, 0)
                }), {
                    AddThemeObject(MakeElement("Stroke"), "Stroke")
                }), "Second"),
                SetProps(MakeElement("List", 0, 2), {
                    SortOrder = Enum.SortOrder.LayoutOrder
                }),
                AddThemeObject(MakeElement("Padding", 0, 6, 6, 0), "Second")
            }), "Second")

            DropdownFrame.Size = UDim2.new(1, 0, 0, 38)

            AddConnection(DropButton.MouseButton1Up, function()
                if Opened then
                    TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10)}):Play()
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 38)}):Play()
                    TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                    wait(0.3)
                    OptionHolder.Visible = false
                    DropdownFrame.ClipsDescendants = true
                else
                    DropdownFrame.ClipsDescendants = false
                    OptionHolder.Visible = true
                    TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10 + (#DropdownConfig.Options * 32))}):Play()
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, (10 + (#DropdownConfig.Options * 32)) + 38)}):Play()
                    TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 180}):Play()
                end
                Opened = not Opened
            end)

            AddConnection(DropButton.MouseEnter, function()
                TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(DropButton.MouseLeave, function()
                TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
            end)

            for i, Option in ipairs(DropdownConfig.Options) do
                local OptionButton = SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                })

                local OptionFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                    Size = UDim2.new(1, 0, 0, 30),
                    Parent = OptionHolder
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", Option, 15), {
                        Size = UDim2.new(1, -12, 1, 0),
                        Position = UDim2.new(0, 12, 0, 0),
                        Font = Enum.Font.GothamBold,
                        Name = "Content"
                    }), "Text"),
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    OptionButton
                }), "Second")

                AddConnection(OptionButton.MouseButton1Up, function()
                    if not DropdownConfig.Multi then
                        TweenService:Create(OptionHolder, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, -20, 0, 10)}):Play()
                        TweenService:Create(DropdownFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 38)}):Play()
                        TweenService:Create(DropdownFrame.Arrow, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                        wait(0.3)
                        OptionHolder.Visible = false
                        DropdownFrame.ClipsDescendants = true
                        Opened = not Opened
                    end
                    if DropdownConfig.Multi and table.find(Dropdown.Values, Option) then
                        for i, v in pairs(Dropdown.Values) do
                            if v == Option then
                                table.remove(Dropdown.Values, i)
                            end
                        end
                    else
                        if DropdownConfig.Multi then
                            table.insert(Dropdown.Values, Option)
                        else
                            Dropdown.Values = {Option}
                        end
                    end
                    spawn(function()
                        if not DropdownConfig.Multi then
                            DropdownConfig.Callback(Option)
                        else
                            DropdownConfig.Callback(Dropdown.Values)
                        end
                    end)
                    if DropdownConfig.Multi then
                        TweenService:Create(OptionFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = table.find(Dropdown.Values, Option) and 0.3 or 0}):Play()
                    else
                        TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.3}):Play()
                        TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Text = Option}):Play()
                        wait(0.2)
                        TweenService:Create(DropdownFrame.Content, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end
                end)

                AddConnection(OptionButton.MouseEnter, function()
                    TweenService:Create(OptionFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
                end)

                AddConnection(OptionButton.MouseLeave, function()
                    TweenService:Create(OptionFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                end)
            end

            if DropdownConfig.Flag then
                CanCantHUB.Flags[DropdownConfig.Flag] = Dropdown
            end

            return Dropdown
        end
        function ElementFunction:AddTextbox(TextboxConfig)
            TextboxConfig = TextboxConfig or {}
            TextboxConfig.Name = TextboxConfig.Name or "Textbox"
            TextboxConfig.Default = TextboxConfig.Default or ""
            TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
            TextboxConfig.Callback = TextboxConfig.Callback or function() end

            local Textbox = {Value = TextboxConfig.Default}

            local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 38),
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 0, 14),
                    Position = UDim2.new(0, 12, 0, 10),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("TextBox", TextboxConfig.Default, 15), {
                    Size = UDim2.new(1, -24, 0, 30),
                    Position = UDim2.new(0, 12, 0, 22),
                    Font = Enum.Font.GothamSemibold,
                    TextColor3 = Color3.fromRGB(240, 240, 240),
                    PlaceholderColor3 = Color3.fromRGB(210, 210, 210),
                    TextXAlignment = Enum.TextXAlignment.Left,
                    Name = "Textbox"
                }), "TextDark")
            }), "Second")

            AddConnection(TextboxFrame.Textbox.Focused, function()
                TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(TextboxFrame.Textbox.FocusLost, function()
                TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                if TextboxConfig.TextDisappear then
                    TextboxFrame.Textbox.Text = ""
                end
                Textbox.Value = TextboxFrame.Textbox.Text
                TextboxConfig.Callback(Textbox.Value)
            end)

            AddConnection(TextboxFrame.Textbox.Focused, function()
                TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.R * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.G * 255 + 3, CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second.B * 255 + 3)}):Play()
            end)

            AddConnection(TextboxFrame.Textbox.FocusLost, function()
                TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = CanCantHUB.Themes[CanCantHUB.SelectedTheme].Second}):Play()
                if TextboxConfig.TextDisappear then
                    TextboxFrame.Textbox.Text = ""
                end
                Textbox.Value = TextboxFrame.Textbox.Text
                TextboxConfig.Callback(Textbox.Value)
            end)

            return Textbox
        end
        function ElementFunction:AddKeybind(KeybindConfig)
            KeybindConfig = KeybindConfig or {}
            KeybindConfig.Name = KeybindConfig.Name or "Keybind"
            KeybindConfig.Default = KeybindConfig.Default or Enum.KeyCode.RightShift
            KeybindConfig.Callback = KeybindConfig.Callback or function() end

            local Keybind = {Value = KeybindConfig.Default, Binding = false}

            local KeybindFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                Size = UDim2.new(1, 0, 0, 38),
                Parent = ItemParent
            }), {
                AddThemeObject(SetProps(MakeElement("Label", KeybindConfig.Name, 15), {
                    Size = UDim2.new(1, -12, 1, 0),
                    Position = UDim2.new(0, 12, 0, 0),
                    Font = Enum.Font.GothamBold,
                    Name = "Content"
                }), "Text"),
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Label", Keybind.Value.Name, 15), {
                    Size = UDim2.new(0, 30, 0, 30),
                    Position = UDim2.new(1, -40, 0, 4),
                    Font = Enum.Font.GothamBold,
                    TextXAlignment = Enum.TextXAlignment.Right,
                    Name = "Bind"
                }), "TextDark")
            }), "Second")

            local Click = MakeElement("Button")
            Click.Size = UDim2.new(0, 30, 0, 30)
            Click.Position = UDim2.new(1, -40, 0, 4)
            Click.Text = ""
            Click.BackgroundTransparency = 1
            Click.Parent = KeybindFrame

            AddConnection(Click.MouseButton1Click, function()
                Click.Text = ""
                Click.Size = UDim2.new(0, 35, 0, 30)
                Click.Position = UDim2.new(1, -45, 0, 4)
                KeybindFrame.Bind.Text = "..."
                Keybind.Binding = true
            end)

            AddConnection(UserInputService.InputBegan, function(Input)
                if Keybind.Binding then
                    if Input.UserInputType == Enum.UserInputType.Keyboard and (not CheckKey(BlacklistedKeys, Input.KeyCode)) then
                        Keybind.Value = Input.KeyCode
                    elseif Input.UserInputType == Enum.UserInputType.MouseButton2 or Input.UserInputType == Enum.UserInputType.MouseButton3 then
                        Keybind.Value = Enum.UserInputType[Input.UserInputType.Name]
                    end
                    KeybindConfig.Callback(Keybind.Value)
                    Keybind.Binding = false
                    Click.Size = UDim2.new(0, 30, 0, 30)
                    Click.Position = UDim2.new(1, -40, 0, 4)
                    KeybindFrame.Bind.Text = Keybind.Value.Name
                end
            end)

            return Keybind
        end

        return ElementFunction
    end

    local TabElements = GetElements(Container)

    return TabElements
end

return CanCantHUB
